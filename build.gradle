buildscript {
  repositories {
    jcenter()
  }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'
// for compliance with higher Java versions
jacoco {
  toolVersion = "0.8.5"
}

group 'Apollo-Core-EE-Enactables'
version '1.0-SNAPSHOT'


repositories {
  mavenCentral()
  maven {
    name "jitpack"
    url 'https://jitpack.io' }
}

dependencies {
  // dependencies to other parts of the Apollo Core EE
  if (project.hasProperty("local")) {
    implementation project (':EE-Core')
    implementation project (':EE-Guice')
    implementation project (':EE-Model')    
  }else {
    implementation 'com.github.Apollo-Core:EE-Model:main-SNAPSHOT'
    implementation 'com.github.Apollo-Core:EE-Guice:main-SNAPSHOT'
    implementation 'com.github.Apollo-Core:EE-Core:master-SNAPSHOT'    
  }

  // dependency to Opt4J
  implementation 'com.github.FedorSmirnov89:opt4j:-SNAPSHOT'
  // dependency to opendse
  implementation 'com.github.FedorSmirnov89:opendse:-SNAPSHOT'

  // SLF4J and Logback for logging
  implementation group: "ch.qos.logback", name: "logback-classic", version: "1.2.3"

  // gson to define the format of the exchanged messages
  implementation 'com.google.code.gson:gson:2.8.6'
  
  // VertX
  implementation 'io.vertx:vertx-core:4.1.1'
  implementation 'io.vertx:vertx-web:4.1.1'
  implementation 'io.vertx:vertx-web-client:4.1.1'
  
  
  // test dependencies
  testImplementation(platform('org.junit:junit-bom:5.7.2'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testCompile group: 'org.mockito',     name: 'mockito-core',     version: '3.4.4'
  testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

  // dependency to local files
  // compile files('libs/lib.jar')
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
  afterEvaluate {
    classDirectories.from = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: '**/modules/**')
    })
  }
}


